[{"C:\\Users\\lnr99\\Documents\\TPO-Client\\tpo-client\\src\\service-worker.ts":"1","C:\\Users\\lnr99\\Documents\\TPO-Client\\tpo-client\\src\\index.tsx":"2","C:\\Users\\lnr99\\Documents\\TPO-Client\\tpo-client\\src\\reportWebVitals.ts":"3","C:\\Users\\lnr99\\Documents\\TPO-Client\\tpo-client\\src\\App.tsx":"4","C:\\Users\\lnr99\\Documents\\TPO-Client\\tpo-client\\src\\serviceWorkerRegistration.ts":"5","C:\\Users\\lnr99\\Documents\\TPO-Client\\tpo-client\\src\\styles\\colors.ts":"6","C:\\Users\\lnr99\\Documents\\TPO-Client\\tpo-client\\src\\styles\\font-style.ts":"7","C:\\Users\\lnr99\\Documents\\TPO-Client\\tpo-client\\src\\styles\\GlobalStyle.tsx":"8","C:\\Users\\lnr99\\Documents\\TPO-Client\\tpo-client\\src\\pages\\SettingGender.tsx":"9","C:\\Users\\lnr99\\Documents\\TPO-Client\\tpo-client\\src\\pages\\SettingStyle.tsx":"10","C:\\Users\\lnr99\\Documents\\TPO-Client\\tpo-client\\src\\pages\\SettingLocation.tsx":"11","C:\\Users\\lnr99\\Documents\\TPO-Client\\tpo-client\\src\\pages\\SettingTime.tsx":"12","C:\\Users\\lnr99\\Documents\\TPO-Client\\tpo-client\\src\\pages\\UserSetting.tsx":"13","C:\\Users\\lnr99\\Documents\\TPO-Client\\tpo-client\\src\\pages\\Congratulation.tsx":"14","C:\\Users\\lnr99\\Documents\\TPO-Client\\tpo-client\\src\\pages\\Setting.tsx":"15","C:\\Users\\lnr99\\Documents\\TPO-Client\\tpo-client\\src\\styles\\GenderStyle.tsx":"16","C:\\Users\\lnr99\\Documents\\TPO-Client\\tpo-client\\src\\styles\\LocationStyle.tsx":"17","C:\\Users\\lnr99\\Documents\\TPO-Client\\tpo-client\\src\\styles\\StylesSetStyle.tsx":"18","C:\\Users\\lnr99\\Documents\\TPO-Client\\tpo-client\\src\\styles\\TimeStyle.tsx":"19","C:\\Users\\lnr99\\Documents\\TPO-Client\\tpo-client\\src\\styles\\MyPageStyle.tsx":"20","C:\\Users\\lnr99\\Documents\\TPO-Client\\tpo-client\\src\\components\\SetGender.tsx":"21","C:\\Users\\lnr99\\Documents\\TPO-Client\\tpo-client\\src\\styles\\EndStyle.tsx":"22","C:\\Users\\lnr99\\Documents\\TPO-Client\\tpo-client\\src\\components\\SetStyle.tsx":"23","C:\\Users\\lnr99\\Documents\\TPO-Client\\tpo-client\\src\\components\\SetTime.tsx":"24","C:\\Users\\lnr99\\Documents\\TPO-Client\\tpo-client\\src\\styles\\SettingStyle.tsx":"25","C:\\Users\\lnr99\\Documents\\TPO-Client\\tpo-client\\src\\pages\\Appinit\\Login.tsx":"26","C:\\Users\\lnr99\\Documents\\TPO-Client\\tpo-client\\src\\pages\\Main\\Home.tsx":"27","C:\\Users\\lnr99\\Documents\\TPO-Client\\tpo-client\\src\\pages\\Main\\Location.tsx":"28","C:\\Users\\lnr99\\Documents\\TPO-Client\\tpo-client\\src\\pages\\MoreContents.tsx":"29","C:\\Users\\lnr99\\Documents\\TPO-Client\\tpo-client\\src\\utils\\imgData.tsx":"30"},{"size":3067,"mtime":1653841585669,"results":"31","hashOfConfig":"32"},{"size":533,"mtime":1656671494562,"results":"33","hashOfConfig":"32"},{"size":425,"mtime":499162500000,"results":"34","hashOfConfig":"32"},{"size":2675,"mtime":1656685842620,"results":"35","hashOfConfig":"32"},{"size":5256,"mtime":1653291078727,"results":"36","hashOfConfig":"32"},{"size":326,"mtime":1655900662763,"results":"37","hashOfConfig":"32"},{"size":1022,"mtime":1655900662766,"results":"38","hashOfConfig":"32"},{"size":204,"mtime":1656671942862,"results":"39","hashOfConfig":"32"},{"size":1734,"mtime":1656695730249,"results":"40","hashOfConfig":"32"},{"size":1468,"mtime":1656695730255,"results":"41","hashOfConfig":"32"},{"size":1527,"mtime":1656698021581,"results":"42","hashOfConfig":"32"},{"size":1461,"mtime":1656695730258,"results":"43","hashOfConfig":"32"},{"size":2148,"mtime":1656671494569,"results":"44","hashOfConfig":"32"},{"size":979,"mtime":1656687831864,"results":"45","hashOfConfig":"32"},{"size":1804,"mtime":1656671494564,"results":"46","hashOfConfig":"32"},{"size":1951,"mtime":1656695730310,"results":"47","hashOfConfig":"32"},{"size":1586,"mtime":1656695730260,"results":"48","hashOfConfig":"32"},{"size":1882,"mtime":1656695730263,"results":"49","hashOfConfig":"32"},{"size":2600,"mtime":1656695730265,"results":"50","hashOfConfig":"32"},{"size":1428,"mtime":1656671494575,"results":"51","hashOfConfig":"32"},{"size":976,"mtime":1656671494530,"results":"52","hashOfConfig":"32"},{"size":1087,"mtime":1656681919488,"results":"53","hashOfConfig":"32"},{"size":1395,"mtime":1656671494531,"results":"54","hashOfConfig":"32"},{"size":3382,"mtime":1656671494561,"results":"55","hashOfConfig":"32"},{"size":1638,"mtime":1656696543012,"results":"56","hashOfConfig":"32"},{"size":3330,"mtime":1656692489630,"results":"57","hashOfConfig":"32"},{"size":10391,"mtime":1656696260161,"results":"58","hashOfConfig":"32"},{"size":1299,"mtime":1656673315512,"results":"59","hashOfConfig":"32"},{"size":1583,"mtime":1656696260173,"results":"60","hashOfConfig":"32"},{"size":3025,"mtime":1656696260208,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"66"},"1a1bcjb",{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"70"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"70"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"70"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"70"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"70"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"70"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"70"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"70"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"70"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"70"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"70"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"70"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"160"},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"70"},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"160"},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},"C:\\Users\\lnr99\\Documents\\TPO-Client\\tpo-client\\src\\service-worker.ts",["172"],[],"/// <reference lib=\"webworker\" />\r\n/* eslint-disable no-restricted-globals */\r\n\r\n// This service worker can be customized!\r\n// See https://developers.google.com/web/tools/workbox/modules\r\n// for the list of available Workbox modules, or add any other\r\n// code you'd like.\r\n// You can also remove this file if you'd prefer not to use a\r\n// service worker, and the Workbox build step will be skipped.\r\n\r\nimport { clientsClaim } from 'workbox-core';\r\nimport { ExpirationPlugin } from 'workbox-expiration';\r\nimport { precacheAndRoute, createHandlerBoundToURL } from 'workbox-precaching';\r\nimport { registerRoute } from 'workbox-routing';\r\nimport { StaleWhileRevalidate } from 'workbox-strategies';\r\n\r\ndeclare const self: ServiceWorkerGlobalScope;\r\n\r\nclientsClaim();\r\n\r\n// Precache all of the assets generated by your build process.\r\n// Their URLs are injected into the manifest variable below.\r\n// This variable must be present somewhere in your service worker file,\r\n// even if you decide not to use precaching. See https://cra.link/PWA\r\n\r\nprecacheAndRoute(self.__WB_MANIFEST);\r\n\r\n// Set up App Shell-style routing, so that all navigation requests\r\n// are fulfilled with your index.html shell. Learn more at\r\n// https://developers.google.com/web/fundamentals/architecture/app-shell\r\n// const fileExtensionRegexp = new RegExp('/[^/?]+\\\\.[^/]+$');\r\n\r\nregisterRoute(\r\n  // Return false to exempt requests from being fulfilled by index.html.\r\n  ({ request, url }: { request: Request; url: URL }) => {\r\n    // If this isn't a navigation, skip.\r\n    if (request.mode !== 'navigate') {\r\n      return false;\r\n    }\r\n\r\n    // If this is a URL that starts with /_, skip.\r\n    if (url.pathname.startsWith('/_')) {\r\n      return false;\r\n    }\r\n\r\n    // If this looks like a URL for a resource, because it contains\r\n    // a file extension, skip.\r\n    // if (url.pathname.match(fileExtensionRegexp)) {\r\n    //   return false;\r\n    // }\r\n\r\n    // Return true to signal that we want to use the handler.\r\n    return true;\r\n  },\r\n  // createHandlerBoundToURL(process.env.PUBLIC_URL + '/index.html')\r\n);\r\n\r\n// An example runtime caching route for requests that aren't handled by the\r\n// precache, in this case same-origin .png requests like those from in public/\r\nregisterRoute(\r\n  // Add in any other file extensions or routing criteria as needed.\r\n  ({ url }) => url.origin === self.location.origin && url.pathname.endsWith('.png'),\r\n  // Customize this strategy as needed, e.g., by changing to CacheFirst.\r\n  new StaleWhileRevalidate({\r\n    cacheName: 'images',\r\n    plugins: [\r\n      // Ensure that once this runtime cache reaches a maximum size the\r\n      // least-recently used images are removed.\r\n      new ExpirationPlugin({ maxEntries: 50 }),\r\n    ],\r\n  })\r\n);\r\n\r\n// This allows the web app to trigger skipWaiting via\r\n// registration.waiting.postMessage({type: 'SKIP_WAITING'})\r\nself.addEventListener('message', (event) => {\r\n  if (event.data && event.data.type === 'SKIP_WAITING') {\r\n    self.skipWaiting();\r\n  }\r\n});\r\n\r\n// Any other custom service worker logic can go here.\r\n",["173","174","175","176","177"],"C:\\Users\\lnr99\\Documents\\TPO-Client\\tpo-client\\src\\index.tsx",[],[],["178","179","180","181","182"],"C:\\Users\\lnr99\\Documents\\TPO-Client\\tpo-client\\src\\reportWebVitals.ts",[],[],"C:\\Users\\lnr99\\Documents\\TPO-Client\\tpo-client\\src\\App.tsx",[],[],"C:\\Users\\lnr99\\Documents\\TPO-Client\\tpo-client\\src\\serviceWorkerRegistration.ts",["183","184","185","186","187","188"],[],"// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","C:\\Users\\lnr99\\Documents\\TPO-Client\\tpo-client\\src\\styles\\colors.ts",[],[],"C:\\Users\\lnr99\\Documents\\TPO-Client\\tpo-client\\src\\styles\\font-style.ts",[],[],"C:\\Users\\lnr99\\Documents\\TPO-Client\\tpo-client\\src\\styles\\GlobalStyle.tsx",["189"],[],"import React from 'react';\r\nimport {createGlobalStyle} from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  * {\r\n    margin: 0;\r\n    padding: 0;;\r\n  }\r\n`\r\n\r\nexport default GlobalStyle;\r\n","C:\\Users\\lnr99\\Documents\\TPO-Client\\tpo-client\\src\\pages\\SettingGender.tsx",["190"],[],"import React from 'react';\r\nimport {useNavigate} from 'react-router-dom';\r\nimport {Header,SettingTitle,InputContainer} from \"../styles/GenderStyle\";\r\nimport backBtn from '../assets/icons/back-icon.png';\r\nimport SetGender from '../components/SetGender';\r\n\r\ninterface Gender {\r\n    gender:string\r\n    changeGender: (value:string) => void\r\n}\r\n\r\n\r\nfunction SettingGender({gender,changeGender}: Gender) {\r\n    const navigate = useNavigate();\r\n\r\n    const GENDER = {\r\n        male: 'Male',\r\n        female: 'Female',\r\n    };\r\n\r\n    const onClickHandler = () => {\r\n        if (gender === GENDER.male || gender === GENDER.female) {\r\n            navigate('/setting/style');\r\n        } else {\r\n            alert('성별을 선택해 주세요')\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Header>\r\n                <img src={backBtn} alt='backButton'/>\r\n                <span>User Setting</span>\r\n            </Header>\r\n            <SettingTitle>\r\n                <span>Gender</span>\r\n                <span>1/4</span>\r\n            </SettingTitle>\r\n            <InputContainer>\r\n              <SetGender gender={gender} changeGender={changeGender}/>\r\n                {\r\n                    gender === GENDER.male || gender === GENDER.female ?\r\n                        <footer onClick={onClickHandler} aria-hidden='true' style={{backgroundColor: '#3A3F45'}}>\r\n                            <span>Next</span>\r\n                        </footer> : <footer onClick={onClickHandler} aria-hidden='true'>\r\n                            <span>Next</span>\r\n                        </footer>\r\n                }\r\n            </InputContainer>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SettingGender;","C:\\Users\\lnr99\\Documents\\TPO-Client\\tpo-client\\src\\pages\\SettingStyle.tsx",["191"],[],"import React from 'react'\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {Header,SettingTitle,SelectStyledWrapper,FooterWrap} from \"../styles/StylesSetStyle\";\r\nimport backBtn from '../assets/icons/back-icon.png';\r\nimport SetStyle from '../components/SetStyle';\r\n\r\ninterface UserStyle {\r\n    myStyle: string[]\r\n    changeStyle: (value:string[]) => void\r\n}\r\n\r\nfunction SettingStyle({myStyle, changeStyle}: UserStyle ) {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const onClickHandler = () => {\r\n        if(myStyle.length >= 1){\r\n            navigate('/setting/time');\r\n        } else {\r\n            alert('하나 이상 선택해 주세요')\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Header>\r\n                <img src={backBtn} alt='backButton' onClick={() => {\r\n                    navigate(-1);\r\n                }} onKeyDown={onClickHandler}/>\r\n                <span>User Setting</span>\r\n            </Header>\r\n            <SettingTitle>\r\n                <span>Style</span>\r\n                <span>2/4</span>\r\n            </SettingTitle>\r\n            <SelectStyledWrapper>\r\n                <SetStyle myStyle={myStyle} changeStyle={changeStyle}/>\r\n                <FooterWrap onClick={onClickHandler} onActive={myStyle.length >= 1}>\r\n                    <div>Next</div>\r\n                </FooterWrap>\r\n            </SelectStyledWrapper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SettingStyle;\r\n","C:\\Users\\lnr99\\Documents\\TPO-Client\\tpo-client\\src\\pages\\SettingLocation.tsx",["192","193","194"],[],"import React, { useEffect } from 'react';\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport DaumPostcode from 'react-daum-postcode';\r\nimport axios from 'axios';\r\nimport {Header, SettingTitle, SearchContainer, FooterWrap} from \"../styles/LocationStyle\";\r\nimport backBtn from '../assets/icons/back-icon.png';\r\nimport searchIcon from '../assets/icons/search-ic.png';\r\nimport deleteIcon from '../assets/icons/cancel-icon.png';\r\n\r\n\r\nfunction SettingLocation() {\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const onClickHandler = () => {\r\n        navigate('/setting/done')\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Header>\r\n                <img src={backBtn} alt='backButton' onClick={() => {\r\n                    navigate(-1);\r\n                }} onKeyDown={onClickHandler}/>\r\n                <span>User Setting</span>\r\n            </Header>\r\n            <SettingTitle>\r\n                <span className='title'>Location</span>\r\n                <span className='set-count'>4/4</span>\r\n            </SettingTitle>\r\n            <SearchContainer>\r\n                <img src={searchIcon} alt='search-icon' className='search-icon'/>\r\n                <input className='search-bar' type='text' placeholder='Search location'/>\r\n                <img src={deleteIcon} alt='delete-icon' className='delete-btn'/>\r\n                <FooterWrap onClick={onClickHandler}>\r\n                    <div>Done</div>\r\n                </FooterWrap>\r\n            </SearchContainer>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SettingLocation;","C:\\Users\\lnr99\\Documents\\TPO-Client\\tpo-client\\src\\pages\\SettingTime.tsx",["195","196","197"],[],"import React from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport {Header, SettingTitle, SliderWrap,SliderBar,FooterWrap} from \"../styles/TimeStyle\";\r\nimport backBtn from '../assets/icons/back-icon.png'\r\nimport { SetTime } from '../components/SetTime';\r\n\r\ninterface MultiRangeSliderProps {\r\n    min: number;\r\n    max: number;\r\n    minVal: number;\r\n    maxVal: number;\r\n    startTime: (value: number) => void\r\n    endTime: (value: number) => void\r\n}\r\n\r\nfunction SettingTime({min,max,minVal,maxVal,startTime,endTime}:MultiRangeSliderProps){\r\n    const navigate = useNavigate()\r\n\r\n    const onClickHandle = () => {\r\n        navigate('/setting/location');\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Header>\r\n                <img src={backBtn} alt='backButton' onClick={() => {\r\n                    navigate(-1)\r\n                }} onKeyDown={onClickHandle}/>\r\n                <span>User Setting</span>\r\n            </Header>\r\n            <SettingTitle>\r\n                <span>Time</span>\r\n                <span>3/4</span>\r\n            </SettingTitle>\r\n            <SliderWrap>\r\n                <SetTime min={0} max={24} minVal={minVal} maxVal={maxVal} startTime={startTime} endTime={endTime} />\r\n                <FooterWrap onClick={onClickHandle}>\r\n                    <div>Next</div>\r\n                </FooterWrap>\r\n            </SliderWrap>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SettingTime;","C:\\Users\\lnr99\\Documents\\TPO-Client\\tpo-client\\src\\pages\\UserSetting.tsx",["198","199","200","201"],[],"import React from 'react'\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport SetGender from \"../components/SetGender\";\r\nimport SetStyle from \"../components/SetStyle\";\r\nimport {SetTime} from \"../components/SetTime\";\r\nimport {Container, Header} from \"../styles/MyPageStyle\";\r\nimport backBtn from \"../assets/icons/back-icon.png\";\r\n\r\ninterface PropsData {\r\n  gender: string\r\n  changeGender: (value: string) => void\r\n  myStyle: string[]\r\n  changeStyle: (value: string[]) => void\r\n  startTime: (value: number) => void\r\n  endTime: (value: number) => void\r\n  minVal: number,\r\n  maxVal: number,\r\n  min:number,\r\n  max:number,\r\n  userName:string\r\n  getUserName: (value: string) => void\r\n}\r\n\r\nfunction UserSetting({gender,changeGender,myStyle,changeStyle,startTime,endTime,minVal,maxVal,min,max,userName,getUserName} : PropsData) {\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const goBackPage = () => {\r\n        navigate(-1)\r\n    }\r\n\r\n    return(\r\n        <Container>\r\n            <Header>\r\n                <img src={backBtn} alt='backButton' onClick={ () => {\r\n                    goBackPage()\r\n                }} onKeyDown={goBackPage}/>\r\n                <span>User Setting</span>\r\n            </Header>\r\n            <div className='name-section'>\r\n              <input type='text' placeholder='Name' onChange={ (e) => {\r\n                const getValue = e.target.value\r\n                getUserName(getValue)\r\n              }}/>\r\n            </div>\r\n            <div className='gender-section'>\r\n                <SetGender gender={gender} changeGender={changeGender}/>\r\n            </div>\r\n            <div className='style-section'>\r\n                <SetStyle myStyle={myStyle} changeStyle={changeStyle}/>\r\n            </div>\r\n            <div className='time-section'>\r\n                <SetTime minVal={minVal} maxVal={maxVal} startTime={startTime} endTime={endTime} min={0} max={24}/>\r\n            </div>\r\n            <div className='footer-button'>\r\n                <footer>\r\n                    <div>Done</div>\r\n                </footer>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default UserSetting;","C:\\Users\\lnr99\\Documents\\TPO-Client\\tpo-client\\src\\pages\\Congratulation.tsx",[],[],"C:\\Users\\lnr99\\Documents\\TPO-Client\\tpo-client\\src\\pages\\Setting.tsx",["202"],[],"import React from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {HeaderWrap,SettingWrap, TextWrap} from '../styles/SettingStyle';\r\nimport backBtn from '../assets/icons/back-icon.png';\r\nimport nextBtn from '../assets/icons/next-icon.png';\r\n\r\n\r\nfunction Setting() {\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const testFunction = () => {\r\n    console.log('hello world');\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <HeaderWrap>\r\n        <img src={backBtn} alt='backButton' onClick={ () => {\r\n          navigate(-1)\r\n\r\n        }} onKeyDown={testFunction} />\r\n        <span>Setting</span>\r\n      </HeaderWrap>\r\n      <SettingWrap>\r\n        <ul>\r\n          <span>My</span>\r\n          <li>Email</li>\r\n          <li onClick={ () => {\r\n            navigate('usersetting')\r\n          }} onKeyDown={testFunction}>\r\n            User Setting\r\n            <img src={nextBtn} alt='nextButton' className='setting-button'/>\r\n          </li>\r\n          <li onClick={ () => {\r\n            navigate('location')\r\n          }} onKeyDown={testFunction}>\r\n            Location\r\n            <img src={nextBtn} alt='nextButton' className='location-button' />\r\n          </li>\r\n        </ul>\r\n      </SettingWrap>\r\n      <TextWrap>\r\n        <ul>\r\n          <span>Privacy</span>\r\n          <li>\r\n            Terms of Service\r\n            <img src={nextBtn} alt='nextButton' className='terms-button'/>\r\n          </li>\r\n          <li>\r\n            Privacy Policy\r\n            <img src={nextBtn} alt='nextButton' className='policy-button'/>\r\n          </li>\r\n          <li>\r\n            Open source attributions\r\n            <img src={nextBtn} alt='nextButton' className='attributions-button'/>\r\n          </li>\r\n          <li>App version</li>\r\n        </ul>\r\n      </TextWrap>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Setting","C:\\Users\\lnr99\\Documents\\TPO-Client\\tpo-client\\src\\styles\\GenderStyle.tsx",["203","204"],[],"import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport { FONT_STYLES } from '../styles/font-style';\r\nimport COLORS from '../styles/colors'\r\n\r\ninterface SelectorWrapProp {\r\n    isChecked: boolean;\r\n}\r\n\r\nexport const Header = styled.header`\r\n  text-align: center;\r\n  font-size: 20px;\r\n  font-weight: 500;\r\n  // ${FONT_STYLES.M_16}\r\n  height: 52px;\r\n\r\n  span {\r\n    position: relative;\r\n    top: 13px;\r\n  }\r\n\r\n  img {\r\n    width: 8px;\r\n    position: relative;\r\n    right: 108px;\r\n    top: 13px;\r\n  }\r\n`;\r\n\r\nexport const SettingTitle = styled.div`\r\n    display: flex;\r\n    text-align: center;\r\n    justify-content: center;\r\n    gap: 140px;\r\n    \r\n    .title {\r\n        font-size: 12px;\r\n        font-weight: bold;\r\n        position: relative;\r\n        left: -40px;\r\n    }\r\n    \r\n    .set-count {\r\n        font-size: 12px;\r\n        color: #838383;\r\n    }\r\n`;\r\n\r\nexport const InputContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  text-align: center;\r\n  flex-direction: row;\r\n  padding: 13px 16px;\r\n  gap: 8px;\r\n\r\n  footer {\r\n    position: fixed;\r\n    bottom: 40px;\r\n    background-color: #dfdfdf; //\r\n    color: white;\r\n    border-radius: 30px;\r\n    width: 80%;\r\n    height: 60px;\r\n    cursor: pointer;\r\n\r\n    span {\r\n      font-size: 18px;\r\n      position: relative;\r\n      top: 20px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const SelectorWrap = styled.div<SelectorWrapProp>`\r\n  width: 164px;\r\n  height: 40px;\r\n  background-color: #F9F9F9;\r\n  border-radius: 30px;\r\n  cursor: pointer;\r\n\r\n  .check-box {\r\n    width: 16px;\r\n    visibility: ${(props) => props.isChecked ? 'visible' : 'hidden'};\r\n    position: relative;\r\n    top: 30%;\r\n    right: 30%;\r\n  }\r\n\r\n  .empty-circle {\r\n    width: 16px;\r\n    visibility: visible;\r\n    position: relative;\r\n    top: 30%;\r\n    right: 20%;\r\n  }\r\n\r\n  span {\r\n    color: ${props => props.isChecked ? '#000000' : '#9d9d9d'};\r\n    position: relative;\r\n    top: 9.5px;\r\n    right: 32px;\r\n  }\r\n`;","C:\\Users\\lnr99\\Documents\\TPO-Client\\tpo-client\\src\\styles\\LocationStyle.tsx",[],[],"C:\\Users\\lnr99\\Documents\\TPO-Client\\tpo-client\\src\\styles\\StylesSetStyle.tsx",["205"],[],"import React from 'react';\r\nimport styled from \"styled-components\";\r\n\r\ninterface SelectorWrapProp {\r\n    isChecked:boolean\r\n    onActive:string[]\r\n}\r\n\r\nexport const Header = styled.header`\r\n  text-align: center;\r\n  font-size: 20px;\r\n  font-weight: 500;\r\n  height: 52px;\r\n\r\n  span {\r\n    position: relative;\r\n    top: 13px;\r\n  }\r\n\r\n  img {\r\n    width: 8px;\r\n    cursor: pointer;\r\n    position: relative;\r\n    right: 108px;\r\n    top: 13px;\r\n  }\r\n`;\r\n\r\nexport const SettingTitle = styled.div`\r\n  display: flex;\r\n  text-align: center;\r\n  justify-content: center;\r\n  gap: 236px;\r\n\r\n  span {\r\n    font-size: 12px;\r\n  }\r\n`;\r\n\r\nexport const SelectStyledWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const StyleOptions = styled.div<SelectorWrapProp>`\r\n  margin: 10px;\r\n  width: 335px;\r\n  height: 48px;\r\n  background-color: #F9F9F9;\r\n  border-radius: 100px;\r\n  cursor: pointer;\r\n\r\n\r\n  .check-box {\r\n    width: 16px;\r\n    position: relative;\r\n    top: 32%;\r\n    left: 0.5%;\r\n    visibility: ${props => props.isChecked ? 'visible' : 'hidden'};\r\n  }\r\n\r\n  .empty-box {\r\n    width: 16px;\r\n    position: relative;\r\n    top: 32%;\r\n    left: 5%;\r\n    visibility: visible;\r\n  }\r\n\r\n\r\n  span {\r\n    color: ${props => props.isChecked ? '#000000' : '#9d9d9d'};\r\n    position: relative;\r\n    top: 13.7px;\r\n    left: 16px;\r\n  }\r\n`\r\nexport const FooterWrap = styled.footer`\r\n  display: flex;\r\n  justify-content: center;\r\n  background-color: ${props => props.onActive ? '#3A3F45' : '#dfdfdf'};\r\n  border-radius: 100px;\r\n  width: 80%;\r\n  height: 52px;\r\n  position: fixed;\r\n  bottom: 40px;\r\n  cursor: pointer;\r\n\r\n  div {\r\n    position: relative;\r\n    font-size: 18px;\r\n    color: white;\r\n    top: 16px;\r\n  }\r\n`;","C:\\Users\\lnr99\\Documents\\TPO-Client\\tpo-client\\src\\styles\\TimeStyle.tsx",["206"],[],"import React from 'react';\r\nimport styled from \"styled-components\";\r\n\r\nexport const Header = styled.header`\r\n  text-align: center;\r\n  font-size: 20px;\r\n  font-weight: 500;\r\n  height: 52px;\r\n\r\n  span {\r\n    position: relative;\r\n    top: 13px;\r\n  }\r\n;\r\n\r\n  img {\r\n    width: 8px;\r\n    cursor: pointer;\r\n    position: relative;\r\n    right: 94px;\r\n    top: 13px;\r\n  }\r\n`;\r\n\r\n\r\nexport const SettingTitle = styled.div`\r\n  display: flex;\r\n  text-align: center;\r\n  justify-content: center;\r\n  gap: 140px;\r\n\r\n  span {\r\n    font-size: 12px;\r\n  }\r\n`;\r\n\r\nexport const SliderWrap = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  text-align: center;\r\n  margin: 20px;\r\n`;\r\n\r\nexport const SliderBar = styled.div`\r\n  display: flex;\r\n  text-align: center;\r\n  justify-content: center;\r\n\r\n  .slider {\r\n    position: relative;\r\n    width: 200px;\r\n  }\r\n\r\n  .slider-track,\r\n  .slider-range,\r\n  .slider-left-value,\r\n  .slider-right-value {\r\n    position: absolute;\r\n  }\r\n\r\n  .slider-track,\r\n  .slider-range{\r\n    border-radius: 3px;\r\n    height: 5px;\r\n    margin-top: 1px;\r\n  }\r\n\r\n  .slider-track {\r\n    background-color: #C3C4C5; // 빈색\r\n    width: 100%;\r\n    z-index: 1;\r\n  }\r\n\r\n  .slider-range {\r\n    background-color: #3A3F45;//#3A3F45; // 버튼 사이 색\r\n    z-index: 2;\r\n  }\r\n\r\n  .slider-left-value,\r\n  .slider-right-value {\r\n    font-size: 16px;\r\n  }\r\n\r\n  .slider-left-value {\r\n    left: -40px;\r\n    bottom: -14px;\r\n  }\r\n\r\n  .slider-right-value{\r\n    right: -44px;\r\n    bottom: -14px;\r\n  }\r\n\r\n  .thumb,\r\n  .thumb::-webkit-slider-thumb {\r\n    -webkit-appearance: none;\r\n    -webkit-tap-highlight-color: transparent;\r\n  }\r\n\r\n  .thumb {\r\n    pointer-events: none;\r\n    position: absolute;\r\n    height: 0;\r\n    width: 200px;\r\n    outline: none;\r\n  }\r\n\r\n  .thumb-zindex-3 {\r\n    z-index:3;\r\n  }\r\n\r\n  .thumb-zindex-4 {\r\n    z-index: 4;\r\n  }\r\n\r\n  .thumb-zindex-5{\r\n    z-index: 5;\r\n  }\r\n\r\n  .thumb::-webkit-slider-thumb {\r\n      background-color:#3A3F45; // 버튼 색깔 \r\n      border: none;\r\n      border-radius: 50%;\r\n      cursor: pointer;\r\n      height: 18px;\r\n      width: 18px;\r\n      margin-top: 4px;\r\n      pointer-events: all;\r\n      position: relative;\r\n  }\r\n`;\r\n\r\nexport const FooterWrap = styled.footer`\r\n  display: flex;\r\n  justify-content: center;\r\n  background-color: #3A3F45;\r\n  border-radius: 100px;\r\n  width: 80%;\r\n  height: 52px;\r\n  position: fixed;\r\n  bottom: 40px;\r\n  cursor: pointer;\r\n\r\n  div {\r\n    position: relative;\r\n    font-size: 18px;\r\n    color: white;\r\n    top: 16px;\r\n  }\r\n`;\r\n","C:\\Users\\lnr99\\Documents\\TPO-Client\\tpo-client\\src\\styles\\MyPageStyle.tsx",["207"],[],"import React from 'react';\r\nimport styled from \"styled-components\";\r\n\r\n\r\nexport const Container = styled.div`\r\n  \r\n  .name-section {\r\n    margin-bottom: 40px;\r\n    display: flex;\r\n    justify-content: center;\r\n    text-align: center;\r\n    input {\r\n      border-radius: 100px;\r\n      width: 300px;\r\n      height: 36px;\r\n      background-color: #f9f9f9;\r\n      border: none;\r\n      outline: none;\r\n      padding-left: 20px;\r\n    }\r\n  }\r\n  .gender-section {\r\n    margin-bottom: 40px;\r\n    display: flex;\r\n    justify-content: center;\r\n    text-align: center;\r\n  }\r\n  .style-section {\r\n    margin-bottom: 40px;\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n\r\n  .time-section {\r\n    position: relative;\r\n    right: 20px;\r\n    margin-top: 20px;\r\n  }\r\n  \r\n  .footer-button {\r\n    display: flex;\r\n    justify-content: center;\r\n    text-align: center;\r\n    position: absolute;\r\n    background-color: #3A3F45;\r\n    border-radius: 100px;\r\n    width: 100%;\r\n    height: 52px;\r\n    bottom: 40px;\r\n    cursor: pointer;\r\n\r\n    div {\r\n      position: relative;\r\n      font-size: 18px;\r\n      color: white;\r\n      top: 16px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  text-align: center;\r\n  font-size: 20px;\r\n  font-weight: 500;\r\n  height: 52px;\r\n\r\n  span {\r\n    position: relative;\r\n    top: 13px;\r\n  }\r\n\r\n  img {\r\n    width: 8px;\r\n    cursor: pointer;\r\n    position: relative;\r\n    right: 108px;\r\n    top: 13px;\r\n  }\r\n`;","C:\\Users\\lnr99\\Documents\\TPO-Client\\tpo-client\\src\\components\\SetGender.tsx",[],[],"C:\\Users\\lnr99\\Documents\\TPO-Client\\tpo-client\\src\\styles\\EndStyle.tsx",[],[],"C:\\Users\\lnr99\\Documents\\TPO-Client\\tpo-client\\src\\components\\SetStyle.tsx",["208"],[],"import React from 'react';\r\nimport {StyleOptions} from \"../styles/StylesSetStyle\";\r\nimport emptyCircle from \"../assets/icons/empty-circle.png\";\r\nimport checkCircle from \"../assets/icons/circle-icon.png\";\r\n\r\ninterface UserStyle {\r\n    myStyle: string[]\r\n    changeStyle: (value:string[]) => void\r\n}\r\n\r\nfunction SetStyle({myStyle,changeStyle}: UserStyle) {\r\n\r\n    const styleList = [\r\n        'Casual',\r\n        'Street',\r\n        'Office',\r\n        'Romantic',\r\n        'Sexy/Glamorous',\r\n        'Unique',\r\n        'Unisex'\r\n    ];\r\n\r\n    const makeMyStyleList = (item) => {\r\n        if(!myStyle.includes(item)){\r\n            changeStyle( [...myStyle, item])\r\n        } else {\r\n            changeStyle(myStyle.map( n => {return n}).filter( value => value !== item))\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            {styleList.map((item,index) => {\r\n                return (\r\n                    <StyleOptions onClick={ () => {\r\n                        makeMyStyleList(item)\r\n                    }} isChecked={myStyle.includes(item)}>\r\n                        <img src={emptyCircle} alt='check-icon' className='empty-box'/>\r\n                        <img src={checkCircle} alt='check-icon' className='check-box'/>\r\n                        <span>{item}</span>\r\n                    </StyleOptions>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SetStyle;","C:\\Users\\lnr99\\Documents\\TPO-Client\\tpo-client\\src\\components\\SetTime.tsx",[],[],"C:\\Users\\lnr99\\Documents\\TPO-Client\\tpo-client\\src\\styles\\SettingStyle.tsx",["209","210"],[],"C:\\Users\\lnr99\\Documents\\TPO-Client\\tpo-client\\src\\pages\\Appinit\\Login.tsx",["211","212","213","214","215","216","217","218","219","220"],[],"C:\\Users\\lnr99\\Documents\\TPO-Client\\tpo-client\\src\\pages\\Main\\Home.tsx",["221","222","223","224","225","226","227","228","229","230"],[],"import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport axios, { AxiosRequestConfig } from 'axios';\r\nimport {BrowserRouter as Link, useNavigate} from 'react-router-dom';\r\n\r\nimport { Pagination, FreeMode } from 'swiper';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\n\r\nimport COLORS from '../../styles/colors'\r\nimport { FONT_STYLES } from '../../styles/font-style';\r\nimport Location from '../Main/Location';\r\n\r\nimport IcLocation from '../../assets/icons/ic-location.png';\r\nimport IcAlarm from '../../assets/icons/ic-alarm.png';\r\nimport IcSettings from '../../assets/icons/ic-settings.png';\r\nimport IcDivision from '../../assets/icons/ic-division-white.png';\r\nimport IcDivisionGray from '../../assets/icons/ic-division-gray.png';\r\nimport IcClock from '../../assets/icons/ic-clock.png';\r\nimport MainSample from '../../assets/img-main-sample.png';\r\n\r\nimport DummyCard from '../../assets/img-dummy-card.png';\r\nimport o1 from '../../assets/image-outer/1.jpg';\r\nimport o2 from '../../assets/image-outer/2.jpg';\r\nimport o3 from '../../assets/image-outer/3.jpg';\r\nimport o4 from '../../assets/image-outer/4.jpg';\r\nimport o5 from '../../assets/image-outer/5.jpg';\r\nimport o6 from '../../assets/image-outer/6.jpg';\r\nimport o7 from '../../assets/image-outer/7.jpg';\r\nimport o8 from '../../assets/image-outer/8.jpg';\r\nimport o9 from '../../assets/image-outer/9.jpg';\r\nimport o10 from '../../assets/image-outer/10.jpg';\r\nimport o11 from '../../assets/image-outer/11.jpg';\r\n\r\nimport b1 from '../../assets/image-onePiece/b1.jpg';\r\nimport b2 from '../../assets/image-onePiece/b2.jpg';\r\nimport b3 from '../../assets/image-onePiece/b3.jpg';\r\nimport b4 from '../../assets/image-onePiece/b4.jpg';\r\nimport b5 from '../../assets/image-onePiece/b5.jpg';\r\nimport b6 from '../../assets/image-onePiece/b6.jpg';\r\nimport b7 from '../../assets/image-onePiece/b7.jpg';\r\nimport b8 from '../../assets/image-onePiece/b8.jpg';\r\nimport b9 from '../../assets/image-onePiece/b9.jpg';\r\nimport b10 from '../../assets/image-onePiece/b10.jpg';\r\nimport b11 from '../../assets/image-onePiece/b11.jpg';\r\nimport b12 from '../../assets/image-onePiece/b12.jpg';\r\n\r\nimport 'swiper/css';\r\nimport 'swiper/css/navigation';\r\nimport 'swiper/css/pagination';\r\nimport 'swiper/css/scrollbar';\r\nimport imgData from '../../utils/imgData';\r\nimport imgOuter from '../../utils/imgOuter';\r\nimport imgBottom from '../../utils/imgBottom';\r\n\r\nconst outerImgs = [o1, o2, o3, o4, o5, o6, o7, o8, o9, o10, o11];\r\nconst onePieceImgs= [b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12];\r\n\r\n  const Styled = {\r\n    Wrap: styled.div`\r\n    `,\r\n    System: styled.div`\r\n      width: 100%;\r\n      height: 44px;\r\n      background-color: ${COLORS.Gray100};\r\n    `,\r\n    Header: styled.div`\r\n      height: 52px;\r\n      background-color: ${COLORS.Gray200};\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n    `,\r\n    LocationTxt: styled.div`\r\n      ${FONT_STYLES.R_12}\r\n    `,\r\n    LeftWrap: styled.div`\r\n      display: flex;\r\n    `,\r\n    RightIconWrap: styled.div`\r\n      display: flex;\r\n    `,\r\n  }\r\n\r\n  const Icon = {\r\n    Location: styled.img`\r\n      width: 16px;\r\n      height: 16px;\r\n      margin: 0px 20px;\r\n    `,\r\n    Alarm: styled.img`\r\n      width: 16px;\r\n      height: 16px;\r\n      margin-right: 11px;\r\n    `,\r\n    Settings: styled.img`\r\n      width: 16px;\r\n      height: 16px;\r\n      margin-right: 20px;\r\n    `,\r\n  };\r\n\r\n  const Banner = {\r\n    MainImg: styled.div`\r\n      width: 100%;\r\n      height: 100%;\r\n      background-image: url(${MainSample});\r\n      background-repeat: no-repeat;\r\n      background-size: cover;\r\n      margin-bottom: 25px;\r\n    `,\r\n    TextWrap: styled.div`\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: flex-end;\r\n      margin-bottom: 20px;\r\n    `,\r\n    WhiteArea: styled.div`\r\n      width: 335px;\r\n      height: 63px;\r\n      background-color: ${COLORS.White};\r\n      border-radius: 100px;\r\n      text-align: center;\r\n      align-items: center;\r\n      justify-content: center;\r\n      display: flex;\r\n    `,\r\n    BannerWrap: styled.div`\r\n      display: flex;\r\n      height: 375px;\r\n      justify-content: center;\r\n    `,\r\n\r\n    MainText: styled.div`\r\n      color: ${COLORS.White};\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      text-align: center;\r\n      ${FONT_STYLES.B_14}\r\n      margin-bottom: 14px;\r\n    `,\r\n    SubTextWrap: styled.div`\r\n      display: flex;\r\n      justify-content: center;\r\n      margin-bottom: 20px;\r\n    `,\r\n    SubTextWrap2: styled.div`\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: center;\r\n      align-items: center;\r\n    `,\r\n    SubText: styled.div`\r\n      display: flex;\r\n      justify-content: center;\r\n      color: ${COLORS.White};\r\n      ${FONT_STYLES.R_11}\r\n      margin-bottom: 8px;\r\n    `,\r\n    SubNumber: styled.div`\r\n      justify-content: center;\r\n      color: ${COLORS.White};\r\n      ${FONT_STYLES.B_12}\r\n    `,\r\n    Division: styled.img`\r\n      width: 0.5px;\r\n      height: 31px;\r\n      margin: 0px 62.25px;\r\n    `,\r\n    DivisionGray: styled.img`\r\n      width: 0.5px;\r\n      height: 31px;\r\n      margin: 0px 16.5px;\r\n    `,\r\n    Clock: styled.img`\r\n      width: 10.42;\r\n      height: 9.71px;\r\n      margin-right: 3px;\r\n    `,\r\n    Time: styled.div`\r\n      ${FONT_STYLES.M_11}\r\n      margin-right: 16px;\r\n    `,\r\n    Temperature: styled.div`\r\n      ${FONT_STYLES.B_20}\r\n    `,\r\n  };\r\n\r\n  const Component = {\r\n    Margin: styled.div`\r\n      margin: 0px 20px;\r\n    `,\r\n  };\r\n\r\n  const Category = {\r\n    TitleTxt: styled.div`\r\n      ${FONT_STYLES.B_16}\r\n    `,\r\n    MoreTxt: styled.div`\r\n      ${FONT_STYLES.R_11}\r\n    `,\r\n    Header: styled.div`\r\n      display: flex;\r\n      justify-content: space-between;\r\n      margin-bottom: 12px;\r\n    `,\r\n  }\r\n\r\n  const ImgSwiper = {\r\n    Wrap: styled.div`\r\n      height: 156px;\r\n    `,\r\n    Card: styled.img`\r\n      height: 144px;\r\n    `,\r\n  }\r\n\r\n\r\nfunction Home(props) {\r\n\r\n    const navigate = useNavigate()\r\n\r\n  const variable = {\r\n    data: {\r\n      lat: 37,\r\n      lon: 127\r\n    }\r\n  };\r\n\r\n  const fashionVariable = {\r\n    data: {\r\n      style: 'office',\r\n      max: 14,\r\n      min: 50\r\n    }\r\n  };\r\n\r\n  // lat,lon: 사용자의 위도, 경도 params 필요\r\n  // http://localhost:3000/api/weather?lat=37.56667&lon=126.97806\r\n  useEffect(() => {\r\n    axios.get('http://readygo-tpo.p-e.kr:8080/api/weather?lat=37.56667&lon=126.97806', variable)\r\n      .then((response) => {\r\n        console.log(response.data);\r\n      })\r\n  }, [])\r\n\r\n  // useEffect(() => {\r\n  //   axios.get('http://localhost:3000/api/fashion?style=\"casual\"&style=\"office\"&min=18&max=29', fashionVariable)\r\n  //     .then((response) => {\r\n  //       console.log(response.data);\r\n  //     })\r\n  // }, [])\r\n  \r\n  \r\n  return (\r\n    <div>\r\n      {/* <Styled.System /> */}\r\n      <Styled.Header>\r\n        <Styled.LeftWrap>\r\n          <Icon.Location src={IcLocation} />\r\n          <Styled.LocationTxt>Dongjak-gu, Sangdo-dong</Styled.LocationTxt>\r\n        </Styled.LeftWrap>\r\n\r\n        <Styled.RightIconWrap>\r\n          <Icon.Alarm src={IcAlarm} />\r\n          {/* <Link to='../Setting'> */}\r\n            <Icon.Settings src={IcSettings} onClick={ () => {\r\n            navigate('../Setting')\r\n          }}/>\r\n          {/* </Link> */}\r\n        </Styled.RightIconWrap>\r\n      </Styled.Header>\r\n\r\n      <Banner.MainImg>\r\n        <Banner.BannerWrap>\r\n          <Banner.TextWrap>\r\n            <Banner.MainText>Now</Banner.MainText>\r\n            <Banner.MainText style={{fontSize: 32}}>28°C</Banner.MainText>\r\n\r\n            <Banner.SubTextWrap>\r\n              <Banner.SubTextWrap2>\r\n                <Banner.SubText>Humidity</Banner.SubText>\r\n                <Banner.SubNumber>50%</Banner.SubNumber>\r\n              </Banner.SubTextWrap2>\r\n\r\n              <Banner.Division src={IcDivision}/>\r\n\r\n              <Banner.SubTextWrap2>\r\n                <Banner.SubText>Weather</Banner.SubText>\r\n                <Banner.SubNumber>Cloudy</Banner.SubNumber>\r\n              </Banner.SubTextWrap2>\r\n            </Banner.SubTextWrap>\r\n\r\n            <Banner.WhiteArea>\r\n              <Banner.Clock src={IcClock} />\r\n              <Banner.Time>12 PM</Banner.Time>\r\n              <Banner.Temperature>10°C</Banner.Temperature>\r\n              <Banner.DivisionGray src={IcDivisionGray} />\r\n              <Banner.Clock src={IcClock} />\r\n              <Banner.Time>7 PM</Banner.Time>\r\n              <Banner.Temperature>13°C</Banner.Temperature>\r\n            </Banner.WhiteArea>\r\n          </Banner.TextWrap>\r\n        </Banner.BannerWrap>\r\n      </Banner.MainImg>\r\n\r\n      <Component.Margin>\r\n        <Category.Header>\r\n          <Category.TitleTxt>Top</Category.TitleTxt>\r\n          <Category.MoreTxt onClick={ () => {\r\n            navigate('/contents')\r\n          }}>More</Category.MoreTxt>\r\n        </Category.Header>\r\n\r\n        <ImgSwiper.Wrap>\r\n          <Swiper\r\n          slidesPerView={3}\r\n          spaceBetween={5}\r\n          modules={[Pagination, FreeMode]}\r\n          loop\r\n          // freeMode\r\n          >\r\n          {imgData.map((v) => (\r\n              <SwiperSlide><ImgSwiper.Card src={v.img}/></SwiperSlide>\r\n          ))}\r\n        </Swiper>\r\n      </ImgSwiper.Wrap>\r\n\r\n      <Category.Header>\r\n          <Category.TitleTxt>Outer</Category.TitleTxt>\r\n          <Category.MoreTxt>More</Category.MoreTxt>\r\n        </Category.Header>\r\n\r\n        <ImgSwiper.Wrap>\r\n          <Swiper\r\n          slidesPerView={3}\r\n          spaceBetween={5}\r\n          modules={[Pagination, FreeMode]}\r\n          loop\r\n          // freeMode\r\n          >\r\n\r\n          {outerImgs.map((v) => (\r\n              <SwiperSlide><ImgSwiper.Card src={v}/></SwiperSlide>\r\n          ))}\r\n        </Swiper>\r\n      </ImgSwiper.Wrap>\r\n\r\n      <Category.Header>\r\n          <Category.TitleTxt>One Piece</Category.TitleTxt>\r\n          <Category.MoreTxt>More</Category.MoreTxt>\r\n        </Category.Header>\r\n\r\n        <ImgSwiper.Wrap>\r\n          <Swiper\r\n          slidesPerView={3}\r\n          spaceBetween={5}\r\n          modules={[Pagination, FreeMode]}\r\n          loop\r\n          // freeMode\r\n          >\r\n\r\n          {onePieceImgs.map((v) => (\r\n              <SwiperSlide><ImgSwiper.Card src={v}/></SwiperSlide>\r\n          ))}\r\n        </Swiper>\r\n      </ImgSwiper.Wrap>\r\n    </Component.Margin>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home;\r\n",["231","232","233","234","235"],"C:\\Users\\lnr99\\Documents\\TPO-Client\\tpo-client\\src\\pages\\Main\\Location.tsx",["236","237","238"],[],"import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport DaumPostcode from 'react-daum-postcode';\r\nimport COLORS from '../../styles/colors'\r\nimport { FONT_STYLES } from '../../styles/font-style';\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst DoneBtn = styled.button`\r\n  width: 335px;\r\n  height: 56px;\r\n  background-color: ${COLORS.MainGray000};\r\n  border-radius: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-bottom: 42px;\r\n`;\r\n\r\nconst DoneText = styled.div`\r\n  color: ${COLORS.White}\r\n`;\r\n\r\nfunction Location() {\r\n  const [address, setAddress] = useState('');\r\n  // const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const onHandleComplete = (data) => {\r\n    console.log(data.address);\r\n    setAddress(data.address);\r\n  };\r\n\r\n\r\n  return (\r\n    <Wrapper>\r\n    <div>\r\n      <DaumPostcode \r\n        onComplete={onHandleComplete}\r\n        style={{\r\n          zIndex: \"100\",\r\n          width: \"90vw\",\r\n          height: \"90vh\",\r\n        }}\r\n        autoClose\r\n        alwaysShowEngAddr\r\n      />\r\n    </div>\r\n      <DoneBtn>\r\n        <DoneText>Done</DoneText>\r\n      </DoneBtn>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default Location;","C:\\Users\\lnr99\\Documents\\TPO-Client\\tpo-client\\src\\pages\\MoreContents.tsx",["239"],[],"import React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport imgData from '../utils/imgData'\r\nimport backBtn from '../assets/icons/back-icon.png';\r\nimport dummyImg from '../assets/img-dummy-card.png';\r\nimport ImgData from '../utils/imgData';\r\n\r\n\r\ninterface ImageType {\r\n  id:number,\r\n  img:string\r\n}\r\n\r\n\r\nexport const HeaderWrap = styled.div`\r\n  text-align: center;\r\n  font-size: 20px;\r\n  font-weight: 500;\r\n  height: 52px;\r\n  margin-top: 20px;\r\n\r\n  span {\r\n    position: relative;\r\n    top: 13px;\r\n  }\r\n\r\n  img {\r\n    width: 8px;\r\n    position: relative;\r\n    right: 144px;\r\n    top: 13px;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst CardContainer = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  margin-top: 12px;\r\n  \r\n  img {\r\n    width: 108px;\r\n    height: 144px;\r\n    border-radius: 4px;\r\n    background-color: darkturquoise;\r\n    margin: 2px;\r\n  }\r\n`;\r\n\r\ninterface ImageType {\r\n  id:number,\r\n  img:string\r\n}\r\n\r\nfunction MoreContents() {\r\n\r\n\r\n\r\n  const navigate = useNavigate()\r\n  const testFuc = () => {\r\n    console.log('hello world');\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <HeaderWrap>\r\n        <img src={backBtn} alt='backButton' onClick={ () => {\r\n          navigate(-1)\r\n\r\n        }} onKeyDown={testFuc}/>\r\n        <span>Top</span>\r\n      </HeaderWrap>\r\n      <CardContainer>\r\n        {ImgData.map( (obj) => {\r\n          return(\r\n            <img src={obj.img} alt='dummy-img'/>\r\n          )\r\n        })}\r\n      </CardContainer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MoreContents;","C:\\Users\\lnr99\\Documents\\TPO-Client\\tpo-client\\src\\utils\\imgData.tsx",[],[],{"ruleId":"240","severity":1,"message":"241","line":13,"column":28,"nodeType":"242","messageId":"243","endLine":13,"endColumn":51},{"ruleId":"244","replacedBy":"245"},{"ruleId":"246","replacedBy":"247"},{"ruleId":"248","replacedBy":"249"},{"ruleId":"250","replacedBy":"251"},{"ruleId":"252","replacedBy":"253"},{"ruleId":"244","replacedBy":"254"},{"ruleId":"246","replacedBy":"255"},{"ruleId":"248","replacedBy":"256"},{"ruleId":"250","replacedBy":"257"},{"ruleId":"252","replacedBy":"258"},{"ruleId":"259","severity":1,"message":"260","line":47,"column":11,"nodeType":"261","messageId":"262","endLine":47,"endColumn":22},{"ruleId":"259","severity":1,"message":"260","line":75,"column":15,"nodeType":"261","messageId":"262","endLine":75,"endColumn":26},{"ruleId":"259","severity":1,"message":"260","line":88,"column":15,"nodeType":"261","messageId":"262","endLine":88,"endColumn":26},{"ruleId":"259","severity":1,"message":"260","line":100,"column":7,"nodeType":"261","messageId":"262","endLine":100,"endColumn":20},{"ruleId":"259","severity":1,"message":"260","line":128,"column":7,"nodeType":"261","messageId":"262","endLine":128,"endColumn":18},{"ruleId":"259","severity":1,"message":"260","line":139,"column":9,"nodeType":"261","messageId":"262","endLine":139,"endColumn":22},{"ruleId":"240","severity":1,"message":"263","line":1,"column":8,"nodeType":"242","messageId":"243","endLine":1,"endColumn":13},{"ruleId":"264","severity":1,"message":"265","line":25,"column":13,"nodeType":"266","messageId":"262","endLine":25,"endColumn":33},{"ruleId":"264","severity":1,"message":"265","line":20,"column":13,"nodeType":"266","messageId":"262","endLine":20,"endColumn":35},{"ruleId":"240","severity":1,"message":"267","line":1,"column":17,"nodeType":"242","messageId":"243","endLine":1,"endColumn":26},{"ruleId":"240","severity":1,"message":"268","line":3,"column":8,"nodeType":"242","messageId":"243","endLine":3,"endColumn":20},{"ruleId":"240","severity":1,"message":"269","line":4,"column":8,"nodeType":"242","messageId":"243","endLine":4,"endColumn":13},{"ruleId":"240","severity":1,"message":"270","line":3,"column":42,"nodeType":"242","messageId":"243","endLine":3,"endColumn":51},{"ruleId":"240","severity":1,"message":"271","line":16,"column":23,"nodeType":"242","messageId":"243","endLine":16,"endColumn":26},{"ruleId":"240","severity":1,"message":"272","line":16,"column":27,"nodeType":"242","messageId":"243","endLine":16,"endColumn":30},{"ruleId":"240","severity":1,"message":"269","line":3,"column":8,"nodeType":"242","messageId":"243","endLine":3,"endColumn":13},{"ruleId":"240","severity":1,"message":"271","line":25,"column":95,"nodeType":"242","messageId":"243","endLine":25,"endColumn":98},{"ruleId":"240","severity":1,"message":"272","line":25,"column":99,"nodeType":"242","messageId":"243","endLine":25,"endColumn":102},{"ruleId":"240","severity":1,"message":"273","line":25,"column":103,"nodeType":"242","messageId":"243","endLine":25,"endColumn":111},{"ruleId":"259","severity":1,"message":"260","line":13,"column":5,"nodeType":"261","messageId":"262","endLine":13,"endColumn":16},{"ruleId":"240","severity":1,"message":"263","line":1,"column":8,"nodeType":"242","messageId":"243","endLine":1,"endColumn":13},{"ruleId":"240","severity":1,"message":"274","line":4,"column":8,"nodeType":"242","messageId":"243","endLine":4,"endColumn":14},{"ruleId":"240","severity":1,"message":"263","line":1,"column":8,"nodeType":"242","messageId":"243","endLine":1,"endColumn":13},{"ruleId":"240","severity":1,"message":"263","line":1,"column":8,"nodeType":"242","messageId":"243","endLine":1,"endColumn":13},{"ruleId":"240","severity":1,"message":"263","line":1,"column":8,"nodeType":"242","messageId":"243","endLine":1,"endColumn":13},{"ruleId":"240","severity":1,"message":"275","line":33,"column":34,"nodeType":"242","messageId":"243","endLine":33,"endColumn":39},{"ruleId":"240","severity":1,"message":"263","line":1,"column":8,"nodeType":"242","messageId":"243","endLine":1,"endColumn":13},{"ruleId":"240","severity":1,"message":"276","line":3,"column":10,"nodeType":"242","messageId":"243","endLine":3,"endColumn":21},{"ruleId":"240","severity":1,"message":"267","line":1,"column":27,"nodeType":"242","messageId":"243","endLine":1,"endColumn":36},{"ruleId":"240","severity":1,"message":"277","line":2,"column":26,"nodeType":"242","messageId":"243","endLine":2,"endColumn":30},{"ruleId":"240","severity":1,"message":"278","line":3,"column":8,"nodeType":"242","messageId":"243","endLine":3,"endColumn":19},{"ruleId":"240","severity":1,"message":"269","line":4,"column":8,"nodeType":"242","messageId":"243","endLine":4,"endColumn":13},{"ruleId":"240","severity":1,"message":"279","line":72,"column":9,"nodeType":"242","messageId":"243","endLine":72,"endColumn":23},{"ruleId":"280","severity":1,"message":"281","line":72,"column":32,"nodeType":"282","messageId":"283","endLine":72,"endColumn":35,"suggestions":"284"},{"ruleId":"240","severity":1,"message":"285","line":79,"column":9,"nodeType":"242","messageId":"243","endLine":79,"endColumn":23},{"ruleId":"240","severity":1,"message":"286","line":80,"column":11,"nodeType":"242","messageId":"243","endLine":80,"endColumn":16},{"ruleId":"240","severity":1,"message":"287","line":132,"column":10,"nodeType":"242","messageId":"243","endLine":132,"endColumn":15},{"ruleId":"240","severity":1,"message":"288","line":132,"column":16,"nodeType":"242","messageId":"243","endLine":132,"endColumn":28},{"ruleId":"240","severity":1,"message":"289","line":1,"column":17,"nodeType":"242","messageId":"243","endLine":1,"endColumn":25},{"ruleId":"240","severity":1,"message":"290","line":3,"column":17,"nodeType":"242","messageId":"243","endLine":3,"endColumn":35},{"ruleId":"240","severity":1,"message":"277","line":4,"column":26,"nodeType":"242","messageId":"243","endLine":4,"endColumn":30},{"ruleId":"240","severity":1,"message":"291","line":11,"column":8,"nodeType":"242","messageId":"243","endLine":11,"endColumn":16},{"ruleId":"240","severity":1,"message":"292","line":21,"column":8,"nodeType":"242","messageId":"243","endLine":21,"endColumn":17},{"ruleId":"240","severity":1,"message":"293","line":52,"column":8,"nodeType":"242","messageId":"243","endLine":52,"endColumn":16},{"ruleId":"240","severity":1,"message":"294","line":53,"column":8,"nodeType":"242","messageId":"243","endLine":53,"endColumn":17},{"ruleId":"240","severity":1,"message":"295","line":219,"column":15,"nodeType":"242","messageId":"243","endLine":219,"endColumn":20},{"ruleId":"240","severity":1,"message":"296","line":230,"column":9,"nodeType":"242","messageId":"243","endLine":230,"endColumn":24},{"ruleId":"259","severity":1,"message":"260","line":243,"column":9,"nodeType":"261","messageId":"262","endLine":243,"endColumn":20},{"ruleId":"244","replacedBy":"297"},{"ruleId":"246","replacedBy":"298"},{"ruleId":"248","replacedBy":"299"},{"ruleId":"250","replacedBy":"300"},{"ruleId":"252","replacedBy":"301"},{"ruleId":"240","severity":1,"message":"276","line":5,"column":10,"nodeType":"242","messageId":"243","endLine":5,"endColumn":21},{"ruleId":"240","severity":1,"message":"302","line":30,"column":10,"nodeType":"242","messageId":"243","endLine":30,"endColumn":17},{"ruleId":"259","severity":1,"message":"260","line":34,"column":5,"nodeType":"261","messageId":"262","endLine":34,"endColumn":16},{"ruleId":"259","severity":1,"message":"260","line":49,"column":5,"nodeType":"261","messageId":"262","endLine":49,"endColumn":16},"@typescript-eslint/no-unused-vars","'createHandlerBoundToURL' is defined but never used.","Identifier","unusedVar","lines-around-directive",["303"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],["303"],[],[],[],[],"no-console","Unexpected console statement.","MemberExpression","unexpected","'React' is defined but never used.","no-alert","Unexpected alert.","CallExpression","'useEffect' is defined but never used.","'DaumPostcode' is defined but never used.","'axios' is defined but never used.","'SliderBar' is defined but never used.","'min' is defined but never used.","'max' is defined but never used.","'userName' is defined but never used.","'COLORS' is defined but never used.","'index' is defined but never used.","'FONT_STYLES' is defined but never used.","'Link' is defined but never used.","'GoogleLogin' is defined but never used.","'onLoginSuccess' is assigned a value but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["304","305"],"'onLoginHandler' is assigned a value but never used.","'token' is assigned a value but never used.","'sleep' is defined but never used.","'arg0' is defined but never used.","'useState' is defined but never used.","'AxiosRequestConfig' is defined but never used.","'Location' is defined but never used.","'DummyCard' is defined but never used.","'imgOuter' is defined but never used.","'imgBottom' is defined but never used.","'props' is defined but never used.","'fashionVariable' is assigned a value but never used.",["303"],[],[],[],[],"'address' is assigned a value but never used.","padding-line-between-statements",{"messageId":"306","fix":"307","desc":"308"},{"messageId":"309","fix":"310","desc":"311"},"suggestUnknown",{"range":"312","text":"313"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"312","text":"314"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",[1574,1577],"unknown","never"]