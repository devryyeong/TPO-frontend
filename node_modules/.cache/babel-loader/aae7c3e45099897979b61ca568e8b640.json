{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lnr99\\\\Documents\\\\TPO-Client\\\\tpo-client\\\\src\\\\components\\\\SetTime.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useRef } from 'react';\nimport classnames from \"classnames\";\nimport { SliderBar } from \"../styles/TimeStyle\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SetTime(_ref) {\n  _s();\n\n  let {\n    min,\n    max,\n    minVal,\n    maxVal,\n    startTime,\n    endTime\n  } = _ref;\n  const minValRef = useRef(null);\n  const maxValRef = useRef(null);\n  const range = useRef(null); // Convert to percentage\n\n  const getPercent = useCallback(value => Math.round((value - min) / (max - min) * 100), [min, max]); // Set width of the range to decrease from the left side\n\n  useEffect(() => {\n    if (maxValRef.current) {\n      const minPercent = getPercent(minVal);\n      const maxPercent = getPercent(+maxValRef.current.value); // Precede with '+' to convert the value from type string to type number\n\n      if (range.current) {\n        range.current.style.left = `${minPercent}%`;\n        range.current.style.width = `${maxPercent - minPercent}%`;\n      }\n    }\n  }, [minVal, getPercent]); // Set width of the range to decrease from the right side\n\n  useEffect(() => {\n    if (minValRef.current) {\n      const minPercent = getPercent(+minValRef.current.value);\n      const maxPercent = getPercent(maxVal);\n\n      if (range.current) {\n        range.current.style.width = `${maxPercent - minPercent}%`;\n      }\n    }\n  }, [maxVal, getPercent]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(SliderBar, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: min,\n        max: max,\n        value: minVal,\n        ref: minValRef,\n        onChange: event => {\n          const value = Math.min(+event.target.value, maxVal - 1);\n          startTime(value);\n          event.target.value = value.toString();\n        },\n        className: classnames(\"thumb thumb-zindex-3\", {\n          \"thumb-zindex-5\": minVal > max - 100\n        }),\n        style: {\n          zIndex: '5'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: min,\n        max: max,\n        value: maxVal,\n        ref: maxValRef,\n        onChange: event => {\n          const value = Math.max(+event.target.value, minVal + 1);\n          endTime(value);\n          event.target.value = value.toString();\n        },\n        className: \"thumb thumb-zindex-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slider\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"slider-track\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: range,\n          className: \"slider-range\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"slider-left-value\",\n          children: [minVal, \":00\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"slider-right-value\",\n          children: [maxVal, \":00\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SetTime, \"SF2iAKYHNqT8yR0w5SppTdba8ns=\");\n\n_c = SetTime;\nexport { SetTime };\n\nvar _c;\n\n$RefreshReg$(_c, \"SetTime\");","map":{"version":3,"names":["React","useCallback","useEffect","useRef","classnames","SliderBar","SetTime","min","max","minVal","maxVal","startTime","endTime","minValRef","maxValRef","range","getPercent","value","Math","round","current","minPercent","maxPercent","style","left","width","event","target","toString","zIndex"],"sources":["C:/Users/lnr99/Documents/TPO-Client/tpo-client/src/components/SetTime.tsx"],"sourcesContent":["import React, {useCallback, useEffect, useRef} from 'react';\r\nimport classnames from \"classnames\";\r\nimport { SliderBar } from \"../styles/TimeStyle\";\r\n\r\ninterface MultiRangeSliderProps {\r\n    min: number;\r\n    max: number;\r\n    minVal:number;\r\n    maxVal:number;\r\n    startTime: (value: number) => void\r\n    endTime: (value: number) => void\r\n}\r\n\r\n\r\nfunction SetTime({min, max, minVal, maxVal, startTime, endTime}: MultiRangeSliderProps) {\r\n\r\n    const minValRef = useRef<HTMLInputElement>(null);\r\n    const maxValRef = useRef<HTMLInputElement>(null);\r\n    const range = useRef<HTMLDivElement>(null);\r\n\r\n    // Convert to percentage\r\n    const getPercent = useCallback(\r\n        (value: number) => Math.round(((value - min) / (max - min)) * 100),\r\n        [min, max]\r\n    );\r\n\r\n    // Set width of the range to decrease from the left side\r\n    useEffect(() => {\r\n        if (maxValRef.current) {\r\n            const minPercent = getPercent(minVal);\r\n            const maxPercent = getPercent(+maxValRef.current.value); // Precede with '+' to convert the value from type string to type number\r\n\r\n            if (range.current) {\r\n                range.current.style.left = `${minPercent}%`;\r\n                range.current.style.width = `${maxPercent - minPercent}%`;\r\n            }\r\n        }\r\n    }, [minVal, getPercent]);\r\n\r\n    // Set width of the range to decrease from the right side\r\n    useEffect(() => {\r\n        if (minValRef.current) {\r\n            const minPercent = getPercent(+minValRef.current.value);\r\n            const maxPercent = getPercent(maxVal);\r\n\r\n            if (range.current) {\r\n                range.current.style.width = `${maxPercent - minPercent}%`;\r\n            }\r\n        }\r\n    }, [maxVal, getPercent]);\r\n\r\n    return (\r\n        <div>\r\n            <SliderBar>\r\n                <input\r\n                    type=\"range\"\r\n                    min={min}\r\n                    max={max}\r\n                    value={minVal}\r\n                    ref={minValRef}\r\n                    onChange={(event) => {\r\n                        const value = Math.min(+event.target.value, maxVal - 1);\r\n                        startTime(value);\r\n                        event.target.value = value.toString();\r\n                    }}\r\n                    className={classnames(\"thumb thumb-zindex-3\", {\r\n                        \"thumb-zindex-5\": minVal > max - 100\r\n                    })}\r\n                    style={{zIndex: '5'}}\r\n                />\r\n                <input\r\n                    type=\"range\"\r\n                    min={min}\r\n                    max={max}\r\n                    value={maxVal}\r\n                    ref={maxValRef}\r\n                    onChange={(event) => {\r\n                        const value = Math.max(+event.target.value, minVal + 1);\r\n                        endTime(value);\r\n                        event.target.value = value.toString();\r\n                    }}\r\n                    className=\"thumb thumb-zindex-4\"\r\n                />\r\n                <div className='slider'>\r\n                    <div className='slider-track'/>\r\n                    <div ref={range} className='slider-range'/>\r\n                    <div className='slider-left-value'>{minVal}:00</div>\r\n                    <div className='slider-right-value'>{maxVal}:00</div>\r\n                </div>\r\n            </SliderBar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {SetTime}"],"mappings":"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"},"metadata":{},"sourceType":"module"}